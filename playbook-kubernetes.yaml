---
- hosts: kubernetes
  tasks:

    - name: 'Install yum-utils'
      yum:
        state: present
        name:
         - yum-utils
         - device-mapper-persistent-data
         - lvm2

    - name: 'Add repo docker-ce'
      shell: yum-config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo
      args:
        creates: /etc/yum.repos.d/docker-ce.repo

    - name: 'Add repo kubernetes'
      shell: |
             tee /etc/yum.repos.d/kubernetes.repo<<EOF
             [kubernetes]
             name=Kubernetes
             baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
             enabled=1
             gpgcheck=1
             repo_gpgcheck=1
             gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
             EOF

    - name: 'Update Repository yum'
      command: yum clean all
      args:
        warn: no

    - name: 'Install docker-ce'
      yum:
        state: present
        name:
         - docker-ce
         - docker-ce-cli
         - containerd.io

    - name: 'Install Kubernetes'
      yum:
        state: present
        name:
         - kubelet
         - kubeadm
         - kubectl

    - name: 'Mengubah cgroup-driver docker'
      lineinfile:
        path: /usr/lib/systemd/system/docker.service
        state: present
        regexp: "^ExecStart=/usr/bin/dockerd"
        line: 'ExecStart=/usr/bin/dockerd --exec-opt native.cgroupdriver=systemd -H fd:// --containerd=/run/containerd/containerd.sock'

    - name: 'Mengubah kubeadm config'
      lineinfile:
        path: /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf
        state: present
        regexp: "^ExecStart=/usr/bin/kubelet"
        line: 'ExecStart=/usr/bin/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --cgroup-driver=systemd --kubeconfig=/etc/kubernetes/kubelet.conf --config=/var/lib/kubelet/config.yaml'


    - name: 'Service reload systemd'
      shell: |
             systemctl daemon-reload


    - name: 'Start docker Service'
      shell: |
             systemctl enable docker --now

    - name: 'Start kubelet Services'
      shell: |
             systemctl enable kubelet --now

    - name: 'Stop and disable firewall Services'
      shell: |
             systemctl stop firewalld
             systemctl disable firewalld

    - name: Disable SElinux
      shell: |
             sed -i 's/enforcing/disabled/g' /etc/selinux/config
             
    - name: Disable SWAP since kubernetes can't work with swap enabled (1/2)
      shell: |
             swapoff -a

    - name: Disable SWAP in fstab since kubernetes can't work with swap enabled (2/2)
      replace:
        path: /etc/fstab
        regexp: '^([^#].*?\swap\s+sw\s+.*)$'
        replace: '# \1'

    - name: Restart service containerd
      shell: |
             rm -f /etc/containerd/config.toml
             systemctl restart containerd
  
    - name: Restart service Kubelet (1/2)
      shell: |
             tee /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf<<EOF
             # Note: This dropin only works with kubeadm and kubelet v1.11+
             [Service]
             Environment="KUBELET_KUBECONFIG_ARGS=--bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf"
             Environment="KUBELET_CONFIG_ARGS=--config=/var/lib/kubelet/config.yaml"
             # This is a file that "kubeadm init" and "kubeadm join" generates at runtime, populating the KUBELET_KUBEADM_ARGS variable dynamically
             EnvironmentFile=-/var/lib/kubelet/kubeadm-flags.env
             # This is a file that the user can use for overrides of the kubelet args as a last resort. Preferably, the user should use
             # the .NodeRegistration.KubeletExtraArgs object in the configuration files instead. KUBELET_EXTRA_ARGS should be sourced from this file.
             EnvironmentFile=-/etc/sysconfig/kubelet
             ExecStart=
             ExecStart=/usr/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_CONFIG_ARGS $KUBELET_KUBEADM_ARGS $KUBELET_EXTRA_ARGS
             EOF

    - name: Restart service Kubelet (2/2)
      shell: |
             systemctl daemon-reload
             systemctl restart kubelet
